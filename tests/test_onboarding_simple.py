# tests/test_onboarding_simple.py
import os

import pytest


def test_role_images_exist():
    """–¢–µ—Å—Ç –Ω–∞–ª–∏—á–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π"""
    role_images = {
        "teacher": "onboard_cards_v3/onboard_teacher.png",
        "admin": "onboard_cards_v3/onboard_admin.png",
        "director": "onboard_cards_v3/onboard_director.png",
        "parent": "onboard_cards_v3/onboard_parent.png",
        "student": "onboard_cards_v3/onboard_student.png",
        "psych": "onboard_cards_v3/onboard_psych.png",
    }

    for role, image_path in role_images.items():
        assert os.path.exists(image_path), f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {image_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"


def test_role_descriptions_exist():
    """–¢–µ—Å—Ç –Ω–∞–ª–∏—á–∏—è –æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π"""
    roles = ["teacher", "admin", "director", "parent", "student", "psych"]

    role_descriptions = {
        "teacher": {
            "title": "üë©‚Äçüè´ –£—á–∏—Ç–µ–ª—å",
            "description": "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∞–º–∏\n‚Ä¢ –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–æ–∫ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É\n‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –º–µ–¥–∏–∞-–º–∞—Ç–µ—Ä–∏–∞–ª–∞–º\n‚Ä¢ –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —É—á–µ–Ω–∏–∫–∞–º–∏ –∏ —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏",
        },
        "admin": {
            "title": "üèõ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è",
            "description": "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–æ–∫\n‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –º–µ–¥–∏–∞-–º–∞—Ç–µ—Ä–∏–∞–ª–∞–º\n‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã",
        },
        "director": {
            "title": "üìà –î–∏—Ä–µ–∫—Ç–æ—Ä",
            "description": "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ KPI\n‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º –ø—Ä–æ—Ü–µ—Å—Å–∞–º",
        },
        "parent": {
            "title": "üë™ –†–æ–¥–∏—Ç–µ–ª—å",
            "description": "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞–Ω–∏–π –¥–µ—Ç–µ–π\n‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ–∫\n‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–æ–∫\n‚Ä¢ –°–≤—è–∑—å —Å —É—á–∏—Ç–µ–ª—è–º–∏",
        },
        "student": {
            "title": "üë®‚Äçüéì –£—á–µ–Ω–∏–∫",
            "description": "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞–Ω–∏–π\n‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–æ–∫\n‚Ä¢ –ó–∞–¥–∞–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤\n‚Ä¢ –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–æ–∫ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É",
        },
        "psych": {
            "title": "üßë‚Äç‚öïÔ∏è –ü—Å–∏—Ö–æ–ª–æ–≥",
            "description": "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é\n‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏\n‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —É—á–µ–Ω–∏–∫–æ–≤ –∏ —Ä–æ–¥–∏—Ç–µ–ª–µ–π\n‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å",
        },
    }

    for role in roles:
        assert role in role_descriptions, f"–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ä–æ–ª–∏ {role} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        assert "title" in role_descriptions[role], f"–ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —Ä–æ–ª–∏ {role} –Ω–µ –Ω–∞–π–¥–µ–Ω"
        assert "description" in role_descriptions[role], f"–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ä–æ–ª–∏ {role} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"


def test_keyboard_functions_exist():
    """–¢–µ—Å—Ç –Ω–∞–ª–∏—á–∏—è —Ñ—É–Ω–∫—Ü–∏–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
    try:
        from app.keyboards.onboarding import (
            get_confirmation_keyboard,
            get_role_info_keyboard,
            get_role_selection_keyboard,
        )

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        keyboard1 = get_role_selection_keyboard()
        keyboard2 = get_confirmation_keyboard("teacher")
        keyboard3 = get_role_info_keyboard()

        assert keyboard1 is not None
        assert keyboard2 is not None
        assert keyboard3 is not None

    except ImportError as e:
        pytest.fail(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä: {e}")


def test_onboarding_commands():
    """–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞"""
    commands = ["/onboard", "/carousel"]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤ –∫–æ–¥–µ
    for command in commands:
        assert command.startswith("/"), f"–ö–æ–º–∞–Ω–¥–∞ {command} –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å /"


def test_role_names():
    """–¢–µ—Å—Ç –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–æ–ª–µ–π"""
    role_names = {
        "teacher": "–£—á–∏—Ç–µ–ª—å",
        "admin": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è",
        "director": "–î–∏—Ä–µ–∫—Ç–æ—Ä",
        "parent": "–†–æ–¥–∏—Ç–µ–ª—å",
        "student": "–£—á–µ–Ω–∏–∫",
        "psych": "–ü—Å–∏—Ö–æ–ª–æ–≥",
    }

    for role, name in role_names.items():
        assert len(name) > 0, f"–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏ {role} –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
        assert isinstance(name, str), f"–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏ {role} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π"


def test_image_file_sizes():
    """–¢–µ—Å—Ç —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    role_images = {
        "teacher": "onboard_cards_v3/onboard_teacher.png",
        "admin": "onboard_cards_v3/onboard_admin.png",
        "director": "onboard_cards_v3/onboard_director.png",
        "parent": "onboard_cards_v3/onboard_parent.png",
        "student": "onboard_cards_v3/onboard_student.png",
        "psych": "onboard_cards_v3/onboard_psych.png",
    }

    for role, image_path in role_images.items():
        if os.path.exists(image_path):
            file_size = os.path.getsize(image_path)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π –∏ –Ω–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–±–æ–ª—å—à–µ 10MB)
            assert file_size > 0, f"–§–∞–π–ª {image_path} –ø—É—Å—Ç–æ–π"
            assert (
                file_size < 10 * 1024 * 1024
            ), f"–§–∞–π–ª {image_path} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π ({file_size} –±–∞–π—Ç)"
