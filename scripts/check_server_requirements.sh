#!/bin/bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é SchoolBot

set -e

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è SchoolBot..."
echo "=================================================="

# –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ø–µ—Ö–∞
check_success() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $1${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –û–°
echo -e "\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
if [[ -f /etc/os-release ]]; then
    . /etc/os-release
    echo -e "${GREEN}‚úÖ –û–°: $NAME $VERSION${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –û–°
    case "$ID" in
        ubuntu|debian|centos|rhel|fedora|alpine)
            echo -e "${GREEN}‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –û–°${NC}"
            ;;
        *)
            warn "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –û–°. –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"
            ;;
    esac
else
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –û–°${NC}"
    exit 1
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
echo -e "\nüèóÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞..."
ARCH=$(uname -m)
case "$ARCH" in
    x86_64|amd64)
        echo -e "${GREEN}‚úÖ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)${NC}"
        ;;
    arm64|aarch64)
        echo -e "${GREEN}‚úÖ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)${NC}"
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH${NC}"
        exit 1
        ;;
esac

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
echo -e "\nüê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if command -v docker &> /dev/null; then
    DOCKER_VERSION=$(docker --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)
    echo -e "${GREEN}‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $DOCKER_VERSION${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ Docker
    if docker info &> /dev/null; then
        echo -e "${GREEN}‚úÖ Docker –¥–µ–º–æ–Ω –∑–∞–ø—É—â–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå Docker –¥–µ–º–æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
        echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: sudo systemctl start docker"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if docker ps &> /dev/null; then
        echo -e "${GREEN}‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Docker –≤ –ø–æ—Ä—è–¥–∫–µ${NC}"
    else
        warn "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –≥—Ä—É–ø–ø–µ docker. –î–æ–±–∞–≤—å—Ç–µ: sudo usermod -aG docker \$USER"
    fi
else
    echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker: curl -fsSL https://get.docker.com -o get-docker.sh && sudo sh get-docker.sh"
    exit 1
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
echo -e "\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose..."
if command -v docker-compose &> /dev/null; then
    COMPOSE_VERSION=$(docker-compose --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)
    echo -e "${GREEN}‚úÖ Docker Compose (standalone): $COMPOSE_VERSION${NC}"
elif docker compose version &> /dev/null; then
    COMPOSE_VERSION=$(docker compose version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)
    echo -e "${GREEN}‚úÖ Docker Compose (plugin): $COMPOSE_VERSION${NC}"
else
    echo -e "${RED}‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose: https://docs.docker.com/compose/install/"
    exit 1
fi

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
echo -e "\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤..."
check_port() {
    local port=$1
    local service=$2
    
    if ss -tulpn 2>/dev/null | grep ":$port " > /dev/null; then
        echo -e "${RED}‚ùå –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç ($service)${NC}"
        echo "–ü—Ä–æ—Ü–µ—Å—Å –Ω–∞ –ø–æ—Ä—Ç—É $port:"
        ss -tulpn | grep ":$port " | head -1
        return 1
    else
        echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω ($service)${NC}"
        return 0
    fi
}

check_port 5432 "PostgreSQL"
check_port 6379 "Redis"  
check_port 8080 "Health Check"

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
echo -e "\nüíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞..."
AVAILABLE_KB=$(df / | awk 'NR==2 {print $4}')
AVAILABLE_GB=$((AVAILABLE_KB / 1024 / 1024))

if [[ $AVAILABLE_KB -lt 5242880 ]]; then  # 5GB
    echo -e "${RED}‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ: ${AVAILABLE_GB}GB${NC}"
    echo "–¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 5GB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞"
    exit 1
else
    echo -e "${GREEN}‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ: ${AVAILABLE_GB}GB${NC}"
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
echo -e "\nüß† –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏..."
if command -v free &> /dev/null; then
    TOTAL_RAM_MB=$(free -m | awk 'NR==2{print $2}')
    AVAILABLE_RAM_MB=$(free -m | awk 'NR==2{print $7}')
    
    if [[ $TOTAL_RAM_MB -lt 512 ]]; then
        echo -e "${RED}‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ RAM: ${TOTAL_RAM_MB}MB${NC}"
        echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 1GB RAM"
        exit 1
    elif [[ $TOTAL_RAM_MB -lt 1024 ]]; then
        warn "–ú–∞–ª–æ RAM: ${TOTAL_RAM_MB}MB. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 1GB+"
    else
        echo -e "${GREEN}‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ RAM: ${TOTAL_RAM_MB}MB (–¥–æ—Å—Ç—É–ø–Ω–æ: ${AVAILABLE_RAM_MB}MB)${NC}"
    fi
else
    warn "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—ä–µ–º RAM"
fi

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
echo -e "\nüåç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
if ping -c 1 google.com &> /dev/null; then
    echo -e "${GREEN}‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
else
    echo -e "${RED}‚ùå –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è${NC}"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    exit 1
fi

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS
echo -e "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS..."
if nslookup google.com &> /dev/null || dig google.com &> /dev/null; then
    echo -e "${GREEN}‚úÖ DNS —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
else
    warn "–ü—Ä–æ–±–ª–µ–º—ã —Å DNS. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
fi

# 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ curl/wget
echo -e "\n‚¨áÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏..."
if command -v curl &> /dev/null; then
    echo -e "${GREEN}‚úÖ curl —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
elif command -v wget &> /dev/null; then
    echo -e "${GREEN}‚úÖ wget —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå –ù–µ—Ç curl –∏–ª–∏ wget${NC}"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ curl: sudo apt update && sudo apt install curl"
    exit 1
fi

# 11. –ü—Ä–æ–≤–µ—Ä–∫–∞ git
echo -e "\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Git..."
if command -v git &> /dev/null; then
    GIT_VERSION=$(git --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)
    echo -e "${GREEN}‚úÖ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $GIT_VERSION${NC}"
else
    echo -e "${RED}‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git: sudo apt update && sudo apt install git"
    exit 1
fi

# 12. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤
echo -e "\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤..."
MAX_FILES=$(ulimit -n)
if [[ $MAX_FILES -lt 1024 ]]; then
    warn "–ù–∏–∑–∫–∏–π –ª–∏–º–∏—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤: $MAX_FILES. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å –¥–æ 4096+"
else
    echo -e "${GREEN}‚úÖ –õ–∏–º–∏—Ç —Ñ–∞–π–ª–æ–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π: $MAX_FILES${NC}"
fi

# 13. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω—ã
echo -e "\nüïê –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω—ã..."
if command -v timedatectl &> /dev/null; then
    TIMEZONE=$(timedatectl show --property=Timezone --value)
    echo -e "${GREEN}‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞: $TIMEZONE${NC}"
    
    if timedatectl status | grep -q "synchronized: yes"; then
        echo -e "${GREEN}‚úÖ –í—Ä–µ–º—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ${NC}"
    else
        warn "–í—Ä–µ–º—è –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ NTP"
    fi
else
    warn "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–æ–Ω—É"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo -e "\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "=================================================="
echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é SchoolBot${NC}"
echo ""
echo "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –°–∫–ª–æ–Ω–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: git clone <repo-url>"
echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª"
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker compose up -d"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose logs -f"
echo ""
echo "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ firewall (ufw/iptables)"
echo "- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
echo "- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
echo "- –°–æ–∑–¥–∞–π—Ç–µ –ø–ª–∞–Ω —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"

exit 0
