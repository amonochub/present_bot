#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ SchoolBot –Ω–∞ production —Å–µ—Ä–≤–µ—Ä

set -e

echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SchoolBot –Ω–∞ production —Å–µ—Ä–≤–µ—Ä"
echo "==========================================="

# –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
INSTALL_DIR="/opt/schoolbot"
SERVICE_USER="schoolbot"
SERVICE_GROUP="schoolbot"
LOG_DIR="/var/log/schoolbot"
BACKUP_DIR="/var/backups/schoolbot"
REPO_URL="https://github.com/amonochub/present_bot.git"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
error() {
    echo -e "${RED}‚ùå $1${NC}" >&2
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏ root"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo $0"
        exit 1
    fi
    success "–ü—Ä–∞–≤–∞ root –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã"
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–°
detect_os() {
    if [[ -f /etc/os-release ]]; then
        . /etc/os-release
        OS=$ID
        VER=$VERSION_ID
        success "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–°: $PRETTY_NAME"
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
        exit 1
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
update_system() {
    info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
    
    case $OS in
        ubuntu|debian)
            apt update && apt upgrade -y
            ;;
        centos|rhel|fedora)
            yum update -y || dnf update -y
            ;;
        *)
            warn "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –û–°, –ø—Ä–æ–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
            ;;
    esac
    
    success "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    
    case $OS in
        ubuntu|debian)
            apt install -y \
                curl \
                wget \
                git \
                ca-certificates \
                gnupg \
                lsb-release \
                unzip \
                jq \
                htop \
                nano \
                fail2ban \
                ufw \
                cron \
                logrotate \
                bc \
                mailutils
            ;;
        centos|rhel|fedora)
            yum install -y curl wget git ca-certificates gnupg unzip jq htop nano fail2ban firewalld cronie logrotate bc mailx || \
            dnf install -y curl wget git ca-certificates gnupg unzip jq htop nano fail2ban firewalld cronie logrotate bc mailx
            ;;
        *)
            error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è $OS –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
            exit 1
            ;;
    esac
    
    success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
install_docker() {
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    
    if command -v docker &> /dev/null; then
        info "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker --version)"
        return
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –ø–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º—É —Å–∫—Ä–∏–ø—Ç—É
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    rm get-docker.sh
    
    # –ó–∞–ø—É—Å–∫ –∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ Docker
    systemctl enable docker
    systemctl start docker
    
    success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–µ—Ä–≤–∏—Å–∞
create_service_user() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–µ—Ä–≤–∏—Å–∞..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    if ! getent group $SERVICE_GROUP &>/dev/null; then
        groupadd $SERVICE_GROUP
        success "–ì—Ä—É–ø–ø–∞ $SERVICE_GROUP —Å–æ–∑–¥–∞–Ω–∞"
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if ! getent passwd $SERVICE_USER &>/dev/null; then
        useradd -r -g $SERVICE_GROUP -d $INSTALL_DIR -s /bin/bash $SERVICE_USER
        success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $SERVICE_USER —Å–æ–∑–¥–∞–Ω"
    fi
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É docker
    usermod -aG docker $SERVICE_USER
    success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $SERVICE_USER –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É docker"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p $INSTALL_DIR
    mkdir -p $LOG_DIR
    mkdir -p $BACKUP_DIR
    mkdir -p /etc/schoolbot
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    chown -R $SERVICE_USER:$SERVICE_GROUP $INSTALL_DIR
    chown -R $SERVICE_USER:$SERVICE_GROUP $LOG_DIR
    chown -R $SERVICE_USER:$SERVICE_GROUP $BACKUP_DIR
    
    # –ü—Ä–∞–≤–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –Ω–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    chmod 750 $INSTALL_DIR
    chmod 750 $LOG_DIR
    chmod 750 $BACKUP_DIR
    
    success "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω–∞"
}

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
clone_repository() {
    info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    
    if [[ -d "$INSTALL_DIR/.git" ]]; then
        info "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
        cd $INSTALL_DIR
        sudo -u $SERVICE_USER git pull
    else
        # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        sudo -u $SERVICE_USER git clone $REPO_URL $INSTALL_DIR
    fi
    
    success "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≥–æ—Ç–æ–≤"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall
configure_firewall() {
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall..."
    
    case $OS in
        ubuntu|debian)
            # UFW
            ufw --force enable
            ufw default deny incoming
            ufw default allow outgoing
            ufw allow 22/tcp comment 'SSH'
            ufw allow 80/tcp comment 'HTTP'
            ufw allow 443/tcp comment 'HTTPS'
            # –ù–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç—ã –ë–î –∏ Redis –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
            success "UFW –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            ;;
        centos|rhel|fedora)
            # firewalld
            systemctl enable firewalld
            systemctl start firewalld
            firewall-cmd --permanent --add-service=ssh
            firewall-cmd --permanent --add-service=http
            firewall-cmd --permanent --add-service=https
            firewall-cmd --reload
            success "firewalld –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ fail2ban
configure_fail2ban() {
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ fail2ban..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    cat > /etc/fail2ban/jail.local << 'EOF'
[DEFAULT]
bantime = 3600
findtime = 600
maxretry = 5
backend = systemd

[sshd]
enabled = true
port = ssh
logpath = %(sshd_log)s
backend = %(sshd_backend)s

[nginx-http-auth]
enabled = true
port = http,https
logpath = /var/log/nginx/error.log

[nginx-limit-req]
enabled = true
port = http,https
logpath = /var/log/nginx/error.log
maxretry = 10
EOF
    
    systemctl enable fail2ban
    systemctl start fail2ban
    
    success "fail2ban –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–∞
install_systemd_service() {
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–∞..."
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    cp $INSTALL_DIR/systemd/schoolbot.service /etc/systemd/system/
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
    systemctl daemon-reload
    systemctl enable schoolbot
    
    success "Systemd —Å–µ—Ä–≤–∏—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ logrotate
configure_logrotate() {
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤..."
    
    cat > /etc/logrotate.d/schoolbot << 'EOF'
/var/log/schoolbot/*.log {
    daily
    missingok
    rotate 30
    compress
    delaycompress
    notifempty
    create 0644 schoolbot schoolbot
    postrotate
        systemctl reload schoolbot > /dev/null 2>&1 || true
    endscript
}
EOF
    
    success "Logrotate –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron –∑–∞–¥–∞—á
configure_cron() {
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron –∑–∞–¥–∞—á..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ crontab –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è schoolbot
    cat > /tmp/schoolbot_crontab << 'EOF'
# Backup database daily at 2 AM
0 2 * * * /opt/schoolbot/scripts/backup_db.sh

# Monitor system health every 5 minutes
*/5 * * * * /opt/schoolbot/scripts/monitor.sh --summary >> /var/log/schoolbot/health.log 2>&1

# Clean old Docker images weekly
0 3 * * 0 /usr/bin/docker system prune -f

# Rotate logs daily
0 4 * * * /usr/sbin/logrotate /etc/logrotate.d/schoolbot
EOF
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ crontab
    sudo -u $SERVICE_USER crontab /tmp/schoolbot_crontab
    rm /tmp/schoolbot_crontab
    
    success "Cron –∑–∞–¥–∞—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
create_env_template() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    if [[ ! -f "$INSTALL_DIR/.env" ]]; then
        sudo -u $SERVICE_USER cp $INSTALL_DIR/env.example $INSTALL_DIR/.env
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π
        local db_password=$(openssl rand -base64 32)
        local admin_secret=$(openssl rand -hex 16)
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        sudo -u $SERVICE_USER sed -i "s/DB_PASS=.*/DB_PASS=${db_password}/" $INSTALL_DIR/.env
        sudo -u $SERVICE_USER sed -i "s/ENV=.*/ENV=prod/" $INSTALL_DIR/.env
        
        warn "–í–ê–ñ–ù–û: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ $INSTALL_DIR/.env:"
        warn "- TELEGRAM_TOKEN (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)"
        warn "- ADMIN_IDS (–≤–∞—à Telegram ID –æ—Ç @userinfobot)"
        warn "- GLITCHTIP_DSN (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞)"
        
        success "–®–∞–±–ª–æ–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω"
    else
        info "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
install_monitoring_tools() {
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ netdata (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if [[ ! -f /usr/sbin/netdata ]]; then
        warn "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Netdata –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞? (y/N)"
        read -r install_netdata
        
        if [[ "$install_netdata" == "y" ]] || [[ "$install_netdata" == "Y" ]]; then
            bash <(curl -Ss https://my-netdata.io/kickstart.sh) --stable-channel --disable-telemetry
            success "Netdata —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 19999)"
        fi
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL (Let's Encrypt)
setup_ssl() {
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
    
    warn "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã Let's Encrypt? (y/N)"
    read -r setup_ssl_answer
    
    if [[ "$setup_ssl_answer" == "y" ]] || [[ "$setup_ssl_answer" == "Y" ]]; then
        echo -n "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω–Ω–æ–µ –∏–º—è: "
        read -r domain_name
        
        if [[ -n "$domain_name" ]]; then
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot
            case $OS in
                ubuntu|debian)
                    apt install -y certbot
                    ;;
                centos|rhel|fedora)
                    yum install -y certbot || dnf install -y certbot
                    ;;
            esac
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
            certbot certonly --standalone -d "$domain_name" --non-interactive --agree-tos -m admin@"$domain_name"
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            echo "0 2 * * * certbot renew --quiet" | crontab -
            
            success "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è $domain_name"
        fi
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
create_management_script() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
    
    cat > /usr/local/bin/schoolbot << 'EOF'
#!/bin/bash
# SchoolBot Management Script

INSTALL_DIR="/opt/schoolbot"
SERVICE_USER="schoolbot"

case "$1" in
    start)
        echo "–ó–∞–ø—É—Å–∫ SchoolBot..."
        systemctl start schoolbot
        ;;
    stop)
        echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ SchoolBot..."
        systemctl stop schoolbot
        ;;
    restart)
        echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ SchoolBot..."
        systemctl restart schoolbot
        ;;
    status)
        systemctl status schoolbot
        ;;
    logs)
        journalctl -u schoolbot -f
        ;;
    update)
        echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ SchoolBot..."
        cd $INSTALL_DIR
        sudo -u $SERVICE_USER git pull
        systemctl restart schoolbot
        ;;
    backup)
        echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
        sudo -u $SERVICE_USER $INSTALL_DIR/scripts/backup_db.sh
        ;;
    monitor)
        sudo -u $SERVICE_USER $INSTALL_DIR/scripts/monitor.sh
        ;;
    config)
        nano $INSTALL_DIR/.env
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|logs|update|backup|monitor|config}"
        exit 1
        ;;
esac
EOF
    
    chmod +x /usr/local/bin/schoolbot
    
    success "–°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω (/usr/local/bin/schoolbot)"
}

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
final_check() {
    info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    if systemctl is-enabled docker &>/dev/null; then
        success "Docker: –≤–∫–ª—é—á–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"
    else
        warn "Docker: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"
    fi
    
    if systemctl is-enabled schoolbot &>/dev/null; then
        success "SchoolBot: –≤–∫–ª—é—á–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"
    else
        warn "SchoolBot: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    if [[ -O $INSTALL_DIR ]] || [[ $(stat -c %U $INSTALL_DIR) == $SERVICE_USER ]]; then
        success "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ"
    else
        warn "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: —Ç—Ä–µ–±—É—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if [[ -f "$INSTALL_DIR/.env" ]]; then
        success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: —Ñ–∞–π–ª .env –Ω–∞–π–¥–µ–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        if grep -q "TELEGRAM_TOKEN=your_telegram_token_here" $INSTALL_DIR/.env; then
            warn "TELEGRAM_TOKEN: —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
        else
            success "TELEGRAM_TOKEN: –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        fi
    else
        error "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: —Ñ–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü–æ–∫–∞–∑ –∏—Ç–æ–≥–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
show_final_info() {
    echo ""
    echo -e "${GREEN}üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SchoolBot –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    echo "=================================="
    
    echo -e "${BLUE}üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:${NC}"
    echo "  –£—Å—Ç–∞–Ω–æ–≤–∫–∞: $INSTALL_DIR"
    echo "  –õ–æ–≥–∏: $LOG_DIR"
    echo "  –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏: $BACKUP_DIR"
    echo ""
    
    echo -e "${BLUE}üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:${NC}"
    echo "  –ó–∞–ø—É—Å–∫: schoolbot start"
    echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞: schoolbot stop"
    echo "  –°—Ç–∞—Ç—É—Å: schoolbot status"
    echo "  –õ–æ–≥–∏: schoolbot logs"
    echo "  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: schoolbot update"
    echo "  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: schoolbot config"
    echo ""
    
    echo -e "${BLUE}‚öôÔ∏è –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
    echo "  1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: nano $INSTALL_DIR/.env"
    echo "  2. –î–æ–±–∞–≤—å—Ç–µ TELEGRAM_TOKEN –æ—Ç @BotFather"
    echo "  3. –î–æ–±–∞–≤—å—Ç–µ ADMIN_IDS –æ—Ç @userinfobot"
    echo "  4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: schoolbot start"
    echo "  5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: schoolbot status"
    echo ""
    
    echo -e "${BLUE}üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:${NC}"
    echo "  –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://github.com/amonochub/present_bot"
    echo "  –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: systemctl status schoolbot"
    echo "  –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: journalctl -u schoolbot -f"
    
    if command -v netdata &>/dev/null; then
        echo "  –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://$(hostname -I | awk '{print $1}'):19999"
    fi
    
    echo ""
    warn "–ù–ï –ó–ê–ë–£–î–¨–¢–ï –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å .env —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º!"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
main() {
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ SchoolBot –Ω–∞ production —Å–µ—Ä–≤–µ—Ä"
    echo "–≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."
    echo ""
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    check_root
    detect_os
    update_system
    install_dependencies
    install_docker
    create_service_user
    create_directories
    clone_repository
    configure_firewall
    configure_fail2ban
    install_systemd_service
    configure_logrotate
    configure_cron
    create_env_template
    install_monitoring_tools
    setup_ssl
    create_management_script
    final_check
    show_final_info
    
    echo ""
    success "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏ –∑–∞–ø—É—Å–∫—É."
}

# –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
main "$@"
