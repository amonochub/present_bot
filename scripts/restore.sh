#!/bin/bash
set -euo pipefail

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –±—ç–∫–∞–ø–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/restore.sh [backup_file]

BACKUP_FILE=${1:-}
BACKUP_DIR="./backups"

echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –±—ç–∫–∞–ø–∞
select_backup() {
    if [[ -z "$BACKUP_FILE" ]]; then
        echo "üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:"
        ls -la "$BACKUP_DIR"/*.sql 2>/dev/null || {
            echo "‚ùå –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ $BACKUP_DIR"
            exit 1
        }
        
        echo ""
        read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –±—ç–∫–∞–ø–∞: " BACKUP_FILE
    fi
    
    if [[ ! -f "$BACKUP_FILE" ]]; then
        BACKUP_FILE="$BACKUP_DIR/$BACKUP_FILE"
    fi
    
    if [[ ! -f "$BACKUP_FILE" ]]; then
        echo "‚ùå –§–∞–π–ª –±—ç–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $BACKUP_FILE"
        exit 1
    fi
    
    echo "‚úÖ –í—ã–±—Ä–∞–Ω –±—ç–∫–∞–ø: $BACKUP_FILE"
    echo "–†–∞–∑–º–µ—Ä: $(du -h "$BACKUP_FILE" | cut -f1)"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
backup_current() {
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è..."
    ./scripts/backup.sh
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –±—ç–∫–∞–ø–∞
check_backup_compatibility() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –±—ç–∫–∞–ø–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ SQL —Ñ–∞–π–ª
    if [[ ! "$BACKUP_FILE" =~ \.sql$ ]]; then
        echo "‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è SQL –±—ç–∫–∞–ø–æ–º"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    file_size=$(stat -c%s "$BACKUP_FILE")
    if [[ $file_size -lt 1000 ]]; then
        echo "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –§–∞–π–ª –±—ç–∫–∞–ø–∞ –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π ($file_size –±–∞–π—Ç)"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    if ! head -n 5 "$BACKUP_FILE" | grep -q "PostgreSQL"; then
        echo "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –§–∞–π–ª –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ PostgreSQL dump"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
stop_services() {
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose stop bot
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
restore_database() {
    echo "üóÑÔ∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
    if ! docker-compose exec -T postgres pg_isready -U schoolbot > /dev/null 2>&1; then
        echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        exit 1
    fi
    
    # –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    docker-compose exec -T postgres psql -U schoolbot -d schoolbot -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞
    echo "üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞: $BACKUP_FILE"
    docker-compose exec -T postgres psql -U schoolbot -d schoolbot < "$BACKUP_FILE"
    
    if [[ $? -eq 0 ]]; then
        echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
apply_migrations() {
    echo "üóÑÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
    
    if docker-compose exec -T bot python manage.py migrate; then
        echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
start_services() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    docker-compose start bot
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞..."
    sleep 15
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
    if curl -f http://localhost:8080/healthz > /dev/null 2>&1; then
        echo "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå –ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö
verify_data() {
    echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_count=$(docker-compose exec -T postgres psql -U schoolbot -d schoolbot -t -c "SELECT COUNT(*) FROM users;" | tr -d ' ')
    echo "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $user_count"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫
    ticket_count=$(docker-compose exec -T postgres psql -U schoolbot -d schoolbot -t -c "SELECT COUNT(*) FROM tickets;" | tr -d ' ')
    echo "üìã –ó–∞—è–≤–æ–∫: $ticket_count"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–µ—Ç–æ–∫
    note_count=$(docker-compose exec -T postgres psql -U schoolbot -d schoolbot -t -c "SELECT COUNT(*) FROM notes;" | tr -d ' ')
    echo "üìù –ó–∞–º–µ—Ç–æ–∫: $note_count"
    
    if [[ $user_count -eq 0 ]]; then
        echo "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
clear_cache() {
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞..."
    
    # –û—á–∏—â–∞–µ–º Redis
    docker-compose exec -T redis redis-cli FLUSHALL > /dev/null 2>&1 || true
    
    # –û—á–∏—â–∞–µ–º –∫—ç—à GlitchTip
    docker-compose exec -T glitchtip find /var/lib/glitchtip -name "*.cache" -delete 2>/dev/null || true
    
    echo "‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω"
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
main() {
    echo "üìã –ü–ª–∞–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:"
    echo "1. –í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –±—ç–∫–∞–ø–∞"
    echo "2. –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"
    echo "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"
    echo "4. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "5. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "6. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"
    echo "7. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö"
    echo "9. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞"
    echo ""
    
    select_backup
    backup_current
    check_backup_compatibility
    stop_services
    restore_database
    apply_migrations
    start_services
    verify_data
    clear_cache
    
    echo "üéâ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞:"
    echo "- Health check: http://localhost:8080/healthz"
    echo "- Grafana: http://localhost:3000"
    echo "- Prometheus: http://localhost:9090"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
main "$@" 