#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import sys

from sqlalchemy.ext.asyncio import create_async_engine
from sqlalchemy.orm import sessionmaker

from app.config import DATABASE_URL
from app.db.base import Base
from app.db.user import User


async def init_demo_user():
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫
    engine = create_async_engine(DATABASE_URL)

    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)

    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    async_session = sessionmaker(
        engine, class_=asyncio.AsyncSession, expire_on_commit=False
    )

    async with async_session() as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        result = await session.execute(
            "SELECT id FROM users WHERE login = 'demo01'"
        )
        existing_user = result.fetchone()

        if existing_user:
            print("‚úÖ –î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            await session.execute(
                "UPDATE users SET used = FALSE, telegram_id = NULL WHERE login = 'demo01'"
            )
            await session.commit()
            print("üîÑ –î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–±—Ä–æ—à–µ–Ω –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
        else:
            # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            demo_user = User(
                login='demo01',
                password='demo',
                first_name='–î–µ–º–æ',
                last_name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                role='super',
                is_active=True,
                used=False,
                tg_id=None
            )
            session.add(demo_user)
            await session.commit()
            print("‚úÖ –î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω")
            print("üìã –õ–æ–≥–∏–Ω: demo01")
            print("üîë –ü–∞—Ä–æ–ª—å: demo")

    await engine.dispose()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")

    try:
        await init_demo_user()
        print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    asyncio.run(main())
