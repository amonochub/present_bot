#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/setup_quality.sh

set -e

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.11+"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
PYTHON_VERSION=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
REQUIRED_VERSION="3.11"

if [ "$(printf '%s\n' "$REQUIRED_VERSION" "$PYTHON_VERSION" | sort -V | head -n1)" != "$REQUIRED_VERSION" ]; then
    echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python $REQUIRED_VERSION –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $PYTHON_VERSION"
    exit 1
fi

echo "‚úÖ Python –≤–µ—Ä—Å–∏—è: $PYTHON_VERSION"

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -d "venv" ]; then
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    python3 -m venv venv
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "üîß –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source venv/bin/activate

# –û–±–Ω–æ–≤–ª—è–µ–º pip
echo "‚¨ÜÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
pip install --upgrade pip

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞..."
pip install -r requirements.txt
pip install black ruff mypy bandit safety pre-commit pytest pytest-cov pytest-asyncio

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pre-commit hooks
echo "üîó –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pre-commit hooks..."
pre-commit install

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."

REQUIRED_FILES=(
    ".pre-commit-config.yaml"
    "pyproject.toml"
    "pytest.ini"
    "requirements.txt"
    "env.example"
)

for file in "${REQUIRED_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file –Ω–∞–π–¥–µ–Ω"
    else
        echo "‚ùå $file –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."

REQUIRED_DIRS=(
    "app"
    "app/routes"
    "app/db"
    "app/handlers"
    "app/keyboards"
    "app/middlewares"
    "app/repositories"
    "app/schemas"
    "app/services"
    "app/utils"
    "tests"
    "migrations"
)

for dir in "${REQUIRED_DIRS[@]}"; do
    if [ -d "$dir" ]; then
        echo "‚úÖ $dir –Ω–∞–π–¥–µ–Ω"
    else
        echo "‚ùå $dir –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏..."

LOCALE_FILES=(
    "app/i18n/ru.toml"
    "app/i18n/en.toml"
)

for file in "${LOCALE_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file –Ω–∞–π–¥–µ–Ω"
    else
        echo "‚ùå $file –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
done

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
echo "üîç –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
echo "üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞..."
black --check --diff . || {
    echo "‚ùå –ö–æ–¥ —Ç—Ä–µ–±—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: black ."
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–∞..."
ruff check . || {
    echo "‚ùå –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –ª–∏–Ω—Ç–µ—Ä–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ruff check --fix ."
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∏–∑–∞—Ü–∏–∏..."
mypy app/ || {
    echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ —Ç–∏–ø–∏–∑–∞—Ü–∏–∏"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
bandit -r app/ || {
    echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö..."
safety check || {
    echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö"
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
pytest tests/ -v --tb=short || {
    echo "‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏..."
pytest tests/ --cov=app --cov-report=term-missing --cov-fail-under=80 || {
    echo "‚ùå –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏ –Ω–∏–∂–µ 80%"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ pre-commit
echo "üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ pre-commit hooks..."
pre-commit run --all-files || {
    echo "‚ùå Pre-commit hooks –Ω–µ –ø—Ä–æ—à–ª–∏"
    exit 1
}

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  black .                    - —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞"
echo "  ruff check --fix .         - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏–Ω—Ç–µ—Ä–∞"
echo "  mypy app/                  - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∏–∑–∞—Ü–∏–∏"
echo "  bandit -r app/             - –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "  safety check               - –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
echo "  pytest tests/ -v           - –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
echo "  pytest tests/ --cov=app    - –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º"
echo "  pre-commit run --all-files - –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö pre-commit hooks"
echo ""
echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "  - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ IDE –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
echo "  - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ pre-commit hooks –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –∫–æ–º–º–∏—Ç–æ–º"
echo "  - –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
echo "  - –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø–æ–∫—Ä—ã—Ç–∏–µ–º —Ç–µ—Å—Ç–∞–º–∏"
echo ""
echo "üöÄ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!" 