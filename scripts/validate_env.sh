#!/bin/bash
# –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è SchoolBot

set -e

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è SchoolBot..."
echo "=============================================="

# –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –°—á–µ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
ERRORS=0
WARNINGS=0

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
error() {
    echo -e "${RED}‚ùå $1${NC}"
    ((ERRORS++))
}

warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
    ((WARNINGS++))
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞
if [[ ! -f .env ]]; then
    error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
    echo ""
    info "–°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example:"
    info "cp env.example .env"
    info "nano .env"
    exit 1
fi

success "–§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω"

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo -e "\nüìã –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
set -a  # –ê–≤—Ç–æ—ç–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
source .env
set +a

# –ú–∞—Å—Å–∏–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
declare -A REQUIRED_VARS=(
    ["TELEGRAM_TOKEN"]="–¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)"
    ["DB_NAME"]="–ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL"
    ["DB_USER"]="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    ["DB_PASS"]="–ü–∞—Ä–æ–ª—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    ["ADMIN_IDS"]="ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–ø–æ–ª—É—á–∏—Ç–µ —É @userinfobot)"
)

# –ú–∞—Å—Å–∏–≤ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
declare -A OPTIONAL_VARS=(
    ["DB_HOST"]="postgres"
    ["DB_PORT"]="5432"
    ["REDIS_DSN"]="redis://redis:6379/0"
    ["ENV"]="prod"
    ["KEEP_DAYS"]="14"
    ["GLITCHTIP_DSN"]=""
)

echo -e "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
for var in "${!REQUIRED_VARS[@]}"; do
    if [[ -z "${!var}" ]]; then
        error "$var –Ω–µ –∑–∞–¥–∞–Ω–∞ (${REQUIRED_VARS[$var]})"
    else
        success "$var: –∑–∞–¥–∞–Ω–∞"
    fi
done

echo -e "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
for var in "${!OPTIONAL_VARS[@]}"; do
    if [[ -z "${!var}" ]]; then
        warn "$var –Ω–µ –∑–∞–¥–∞–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${OPTIONAL_VARS[$var]}"
    else
        success "$var: ${!var}"
    fi
done

echo -e "\nüîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram —Ç–æ–∫–µ–Ω–∞
if [[ -n "$TELEGRAM_TOKEN" ]]; then
    if [[ "$TELEGRAM_TOKEN" == "your_telegram_token_here" ]]; then
        error "TELEGRAM_TOKEN —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É"
    elif [[ ${#TELEGRAM_TOKEN} -lt 40 ]]; then
        error "TELEGRAM_TOKEN —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (${#TELEGRAM_TOKEN} —Å–∏–º–≤–æ–ª–æ–≤, –æ–∂–∏–¥–∞–µ—Ç—Å—è 45+)"
    elif [[ ! "$TELEGRAM_TOKEN" =~ ^[0-9]{8,12}:[a-zA-Z0-9_-]{35}$ ]]; then
        warn "TELEGRAM_TOKEN –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É"
    else
        success "TELEGRAM_TOKEN –∏–º–µ–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if [[ -n "$DB_PASS" ]]; then
    if [[ ${#DB_PASS} -lt 8 ]]; then
        warn "DB_PASS —Å–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç–æ–π (${#DB_PASS} —Å–∏–º–≤–æ–ª–æ–≤, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 12+)"
    elif [[ "$DB_PASS" =~ ^[a-z]+$ ]] || [[ "$DB_PASS" =~ ^[0-9]+$ ]]; then
        warn "DB_PASS —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏–ª–∏ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã"
    else
        success "DB_PASS –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–ª–æ–∂–Ω—ã–π"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Admin IDs
if [[ -n "$ADMIN_IDS" ]]; then
    if [[ "$ADMIN_IDS" == "your_admin_id_here" ]]; then
        error "ADMIN_IDS —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É"
    elif [[ ! "$ADMIN_IDS" =~ ^[0-9,\s]+$ ]]; then
        error "ADMIN_IDS —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ –∑–∞–ø—è—Ç—ã–µ)"
    else
        # –ü–æ–¥—Å—á–µ—Ç admin ID
        IFS=',' read -ra IDS <<< "$ADMIN_IDS"
        valid_ids=0
        for id in "${IDS[@]}"; do
            id=$(echo "$id" | tr -d ' ')  # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
            if [[ "$id" =~ ^[0-9]{6,12}$ ]]; then
                ((valid_ids++))
            fi
        done
        
        if [[ $valid_ids -eq 0 ]]; then
            error "ADMIN_IDS –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö Telegram ID"
        else
            success "ADMIN_IDS —Å–æ–¥–µ—Ä–∂–∏—Ç $valid_ids –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö ID"
        fi
    fi
fi

echo -e "\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis DSN
if [[ -n "$REDIS_DSN" ]]; then
    if [[ "$REDIS_DSN" =~ ^redis://.*:[0-9]+/[0-9]+$ ]]; then
        success "REDIS_DSN –∏–º–µ–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"
    else
        warn "REDIS_DSN –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ DB_PORT
if [[ -n "$DB_PORT" ]]; then
    if [[ "$DB_PORT" =~ ^[0-9]+$ ]] && [[ $DB_PORT -ge 1 ]] && [[ $DB_PORT -le 65535 ]]; then
        success "DB_PORT –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ($DB_PORT)"
    else
        error "DB_PORT –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ($DB_PORT), –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1-65535"
    fi
fi

echo -e "\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ KEEP_DAYS
if [[ -n "$KEEP_DAYS" ]]; then
    if [[ "$KEEP_DAYS" =~ ^[0-9]+$ ]] && [[ $KEEP_DAYS -ge 1 ]] && [[ $KEEP_DAYS -le 365 ]]; then
        success "KEEP_DAYS –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ($KEEP_DAYS –¥–Ω–µ–π)"
    else
        warn "KEEP_DAYS –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 365 –¥–Ω–µ–π"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ ENV
if [[ -n "$ENV" ]]; then
    case "$ENV" in
        prod|staging|dev|test)
            success "ENV: $ENV (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ)"
            ;;
        *)
            warn "ENV: $ENV (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: prod, staging, dev, test)"
            ;;
    esac
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ GlitchTip DSN (–µ—Å–ª–∏ –∑–∞–¥–∞–Ω)
if [[ -n "$GLITCHTIP_DSN" ]] && [[ "$GLITCHTIP_DSN" != "" ]]; then
    if [[ "$GLITCHTIP_DSN" =~ ^https?://.*@.*/.* ]]; then
        success "GLITCHTIP_DSN –∏–º–µ–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"
    else
        warn "GLITCHTIP_DSN –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"
    fi
fi

echo -e "\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Docker Compose..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö docker-compose.yml
if [[ -f docker-compose.yml ]]; then
    success "docker-compose.yml –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ docker-compose.yml
    compose_vars=$(grep -oE '\$\{[^}]+\}' docker-compose.yml | sed 's/\${\([^}]*\)}/\1/' | sed 's/:-.*//' | sort -u)
    
    info "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≤ docker-compose.yml:"
    for var in $compose_vars; do
        if [[ -n "${!var}" ]]; then
            echo -e "  ${GREEN}‚úÖ $var${NC}"
        else
            echo -e "  ${YELLOW}‚ö†Ô∏è  $var (–Ω–µ –∑–∞–¥–∞–Ω–∞, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)${NC}"
        fi
    done
else
    warn "docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo -e "\nüõ°Ô∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
if [[ ${#DB_PASS} -lt 12 ]]; then
    info "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å –ë–î: openssl rand -base64 32"
fi

if [[ "$ENV" == "prod" ]] && [[ -z "$GLITCHTIP_DSN" ]]; then
    info "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (GlitchTip/Sentry)"
fi

info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ .env —Ñ–∞–π–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ .gitignore"
info "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤ Docker Swarm –∏–ª–∏ Kubernetes –≤ production"

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo -e "\nüìä –û—Ç—á–µ—Ç –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:"
echo "======================"

if [[ $ERRORS -eq 0 ]] && [[ $WARNINGS -eq 0 ]]; then
    echo -e "${GREEN}üéâ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
elif [[ $ERRORS -eq 0 ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤ –ø–æ—Ä—è–¥–∫–µ, –Ω–æ –µ—Å—Ç—å $WARNINGS –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π${NC}"
else
    echo -e "${RED}‚ùå –ù–∞–π–¥–µ–Ω–æ $ERRORS –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –∏ $WARNINGS –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π${NC}"
fi

echo ""
echo "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "- –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏: $ERRORS"
echo "- –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $WARNINGS"
echo "- –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${#REQUIRED_VARS[@]}"
echo "- –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${#OPTIONAL_VARS[@]}"

if [[ $ERRORS -gt 0 ]]; then
    echo ""
    echo -e "${RED}–ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º!${NC}"
    exit 1
else
    echo ""
    echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é${NC}"
    exit 0
fi
