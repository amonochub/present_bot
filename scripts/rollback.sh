#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –æ—Ç–∫–∞—Ç–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è SchoolBot

set -e

echo "üîÑ –û—Ç–∫–∞—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è SchoolBot"
echo "================================"

# –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DEPLOY_DIR="${DEPLOY_DIR:-/opt/schoolbot}"
BACKUP_DIR="${BACKUP_DIR:-/var/backups/schoolbot}"
LOG_FILE="${LOG_FILE:-/var/log/schoolbot/rollback.log}"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
error() {
    echo -e "${RED}‚ùå $1${NC}" | tee -a "$LOG_FILE"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}" | tee -a "$LOG_FILE"
}

info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}" | tee -a "$LOG_FILE"
}

warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–ò]"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  -h, --help              –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo "  -d, --dir DIR           –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
    echo "  -r, --revisions NUM     –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–∏—Ç–æ–≤ –¥–ª—è –æ—Ç–∫–∞—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1)"
    echo "  --backup FILE           –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞"
    echo "  --force                 –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–∫–∞—Ç –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
    echo "  --list-backups          –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0                                    # –û—Ç–∫–∞—Ç –Ω–∞ 1 –∫–æ–º–º–∏—Ç –Ω–∞–∑–∞–¥"
    echo "  $0 -r 3                              # –û—Ç–∫–∞—Ç –Ω–∞ 3 –∫–æ–º–º–∏—Ç–∞ –Ω–∞–∑–∞–¥"
    echo "  $0 --backup backup_20241206.tar.gz   # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞"
    echo "  $0 --list-backups                    # –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã"
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
REVISIONS=1
BACKUP_FILE=""
FORCE_ROLLBACK=false
LIST_BACKUPS=false

while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -d|--dir)
            DEPLOY_DIR="$2"
            shift 2
            ;;
        -r|--revisions)
            REVISIONS="$2"
            shift 2
            ;;
        --backup)
            BACKUP_FILE="$2"
            shift 2
            ;;
        --force)
            FORCE_ROLLBACK=true
            shift
            ;;
        --list-backups)
            LIST_BACKUPS=true
            shift
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            show_help
            exit 1
            ;;
    esac
done

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p "$(dirname "$LOG_FILE")"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –æ—Ç–∫–∞—Ç–∞
{
    echo "==============================================="
    echo "–ù–∞—á–∞–ª–æ –æ—Ç–∫–∞—Ç–∞: $(date)"
    echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)"
    echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $DEPLOY_DIR"
    echo "==============================================="
} >> "$LOG_FILE"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤
list_available_backups() {
    info "–î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:"
    echo ""
    
    if [[ ! -d "$BACKUP_DIR" ]] || [[ -z "$(ls -A "$BACKUP_DIR")" ]]; then
        warn "–ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ $BACKUP_DIR"
        return
    fi
    
    echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:"
    find "$BACKUP_DIR" -name "schoolbot_backup_*.sql.gz" -type f -printf "%f\t%TY-%Tm-%Td %TH:%TM\n" | sort -r | head -10
    
    echo ""
    echo "–§–∞–π–ª—ã —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:"
    find "$BACKUP_DIR" -name "deployment_backup_*.tar.gz" -type f -printf "%f\t%TY-%Tm-%Td %TH:%TM\n" | sort -r | head -10
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
check_repository_state() {
    if [[ ! -d "$DEPLOY_DIR/.git" ]]; then
        error "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $DEPLOY_DIR"
        exit 1
    fi
    
    cd "$DEPLOY_DIR"
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç
    local current_commit=$(git rev-parse HEAD)
    local current_message=$(git log -1 --pretty=format:"%s")
    
    info "–¢–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç: $current_commit"
    info "–°–æ–æ–±—â–µ–Ω–∏–µ: $current_message"
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–º–∏—Ç—ã –¥–ª—è –æ—Ç–∫–∞—Ç–∞
    info "–ö–æ–º–º–∏—Ç—ã –¥–ª—è –æ—Ç–∫–∞—Ç–∞:"
    git log --oneline -n $((REVISIONS + 2))
}

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–∫–∞—Ç–∞
confirm_rollback() {
    if [[ "$FORCE_ROLLBACK" == true ]]; then
        warn "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–∫–∞—Ç –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
        return
    fi
    
    echo ""
    warn "–í–ù–ò–ú–ê–ù–ò–ï: –û—Ç–∫–∞—Ç –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –ø–æ—Ç–µ—Ä–µ —Ç–µ–∫—É—â–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π!"
    
    if [[ -n "$BACKUP_FILE" ]]; then
        warn "–ë—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –±—ç–∫–∞–ø: $BACKUP_FILE"
    else
        warn "–ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –æ—Ç–∫–∞—Ç –Ω–∞ $REVISIONS –∫–æ–º–º–∏—Ç–æ–≤ –Ω–∞–∑–∞–¥"
    fi
    
    echo -n "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): "
    read -r confirmation
    
    if [[ "$confirmation" != "y" ]] && [[ "$confirmation" != "Y" ]]; then
        info "–û—Ç–∫–∞—Ç –æ—Ç–º–µ–Ω–µ–Ω"
        exit 0
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
stop_services() {
    info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    cd "$DEPLOY_DIR"
    
    if [[ -f "docker-compose.yml" ]]; then
        docker compose down --timeout 30 || warn "–ù–µ —É–¥–∞–ª–æ—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
    fi
    
    success "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û—Ç–∫–∞—Ç Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
rollback_git() {
    info "–û—Ç–∫–∞—Ç Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    
    cd "$DEPLOY_DIR"
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ stash
    if ! git diff --quiet || ! git diff --cached --quiet; then
        warn "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ stash..."
        git add -A
        git stash push -m "Rollback stash $(date)"
    fi
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–∫–∞—Ç–∞
    info "–û—Ç–∫–∞—Ç –Ω–∞ $REVISIONS –∫–æ–º–º–∏—Ç–æ–≤ –Ω–∞–∑–∞–¥..."
    git reset --hard HEAD~$REVISIONS
    
    local new_commit=$(git rev-parse HEAD)
    local new_message=$(git log -1 --pretty=format:"%s")
    
    success "–û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω"
    info "–ù–æ–≤—ã–π –∫–æ–º–º–∏—Ç: $new_commit"
    info "–°–æ–æ–±—â–µ–Ω–∏–µ: $new_message"
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞ —Ñ–∞–π–ª–æ–≤
restore_from_backup() {
    local backup_file="$1"
    
    info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞: $backup_file"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if [[ ! -f "$backup_file" ]]; then
        error "–§–∞–π–ª –±—ç–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $backup_file"
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    local current_backup="$BACKUP_DIR/pre_rollback_$(date +%Y%m%d_%H%M%S).tar.gz"
    info "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è: $current_backup"
    
    tar -czf "$current_backup" -C "$(dirname "$DEPLOY_DIR")" "$(basename "$DEPLOY_DIR")" 2>/dev/null || warn "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é"
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞
    info "–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –±—ç–∫–∞–ø–∞..."
    
    # –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
    local temp_dir=$(mktemp -d)
    
    if tar -xzf "$backup_file" -C "$temp_dir"; then
        # –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
        rm -rf "$DEPLOY_DIR"
        mv "$temp_dir/$(basename "$DEPLOY_DIR")" "$DEPLOY_DIR"
        rmdir "$temp_dir"
        
        success "–§–∞–π–ª—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ –±—ç–∫–∞–ø–∞"
    else
        error "–û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –±—ç–∫–∞–ø–∞"
        rmdir "$temp_dir"
        exit 1
    fi
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±—ç–∫–∞–ø–∞
restore_database() {
    info "–ü–æ–∏—Å–∫ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø –ë–î
    local db_backup=$(find "$BACKUP_DIR" -name "schoolbot_backup_*.sql.gz" -type f | sort -r | head -1)
    
    if [[ -z "$db_backup" ]]; then
        warn "–ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return
    fi
    
    info "–ù–∞–π–¥–µ–Ω –±—ç–∫–∞–ø –ë–î: $(basename "$db_backup")"
    
    # –ó–∞–ø—É—Å–∫ PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–µ—Å–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω)
    cd "$DEPLOY_DIR"
    docker compose up -d postgres
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ PostgreSQL
    info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ PostgreSQL..."
    sleep 10
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î
    if [[ -f "./scripts/backup_db.sh" ]]; then
        bash ./scripts/backup_db.sh --restore "$db_backup"
    else
        warn "–°–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞
start_services() {
    info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞..."
    
    cd "$DEPLOY_DIR"
    
    # –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ (–Ω–∞ —Å–ª—É—á–∞–π –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Dockerfile)
    info "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤..."
    docker compose build
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker compose up -d
    
    success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞
health_check() {
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞..."
    
    local max_attempts=20
    local attempt=1
    
    while [[ $attempt -le $max_attempts ]]; do
        info "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        if docker compose ps --format json | jq -r '.[].State' | grep -q "running"; then
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ health check endpoint (–µ—Å–ª–∏ –µ—Å—Ç—å)
            if curl -f http://localhost:8080/health &> /dev/null; then
                success "–°–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞"
                return 0
            fi
        fi
        
        sleep 15
        ((attempt++))
    done
    
    warn "–°–µ—Ä–≤–∏—Å—ã –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –∑–¥–æ—Ä–æ–≤—å—è"
    return 1
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫–∞—Ç–∞
main() {
    local start_time=$(date +%s)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    if [[ "$LIST_BACKUPS" == true ]]; then
        list_available_backups
        exit 0
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    check_repository_state
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    confirm_rollback
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–∫–∞—Ç–∞
    stop_services
    
    if [[ -n "$BACKUP_FILE" ]]; then
        # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞
        restore_from_backup "$BACKUP_FILE"
        restore_database
    else
        # –û—Ç–∫–∞—Ç Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        rollback_git
    fi
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    start_services
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
    if health_check; then
        local end_time=$(date +%s)
        local duration=$((end_time - start_time))
        
        success "üéâ –û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        info "–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration} —Å–µ–∫—É–Ω–¥"
        
        # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        cd "$DEPLOY_DIR"
        local current_commit=$(git rev-parse HEAD)
        info "–¢–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç: $current_commit"
        
        echo ""
        info "–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤:"
        docker compose ps
        
        echo ""
        info "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: docker compose logs -f"
        
    else
        error "–û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω, –Ω–æ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        warn "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose logs"
        exit 1
    fi
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
