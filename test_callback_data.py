#!/usr/bin/env python3
import asyncio

from app.keyboards.main_menu import menu


async def test_callback_data():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é callback –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–æ–ª–∏
        roles = ["super", "teacher", "admin", "psych", "student", "parent", "director"]

        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ callback –¥–∞–Ω–Ω—ã—Ö:")

        for role in roles:
            # –°–∏–º—É–ª–∏—Ä—É–µ–º nonce
            test_nonce = "test123"

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–µ–Ω—é
            markup = menu(role, "ru", "light", test_nonce)

            print(f"\nüìã –†–æ–ª—å: {role}")
            print(f"üîë Nonce: {test_nonce}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏
            for row in markup.inline_keyboard:
                for button in row:
                    callback_data = button.callback_data
                    print(f"   ‚úÖ –ö–Ω–æ–ø–∫–∞: {button.text}")
                    print(f"   üìù Callback: {callback_data}")

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç callback –¥–∞–Ω–Ω—ã—Ö
                    if ":" in callback_data:
                        nonce, data = callback_data.split(":", 1)
                        print(f"   üîç Nonce: {nonce}, Data: {data}")
                    else:
                        print("   ‚ö†Ô∏è –ù–µ—Ç nonce –≤ callback –¥–∞–Ω–Ω—ã—Ö")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


if __name__ == "__main__":
    result = asyncio.run(test_callback_data())
    if result:
        print("\nüéâ –¢–µ—Å—Ç callback –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –ü—Ä–æ–±–ª–µ–º–∞ —Å callback –¥–∞–Ω–Ω—ã–º–∏")
