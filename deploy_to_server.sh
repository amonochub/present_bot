#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Ghostscript –Ω–∞ –æ–±–∞ –±–æ—Ç–∞
set -e

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Ghostscript –Ω–∞ –æ–±–∞ –±–æ—Ç–∞..."

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±–æ–∏—Ö –±–æ—Ç–æ–≤
ssh root@89.169.38.246 << 'EOF'

echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º telegram-file-bot..."
cd /srv/bots/telegram-file-bot

# –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
git fetch origin
git pull origin main

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ–¥–µ
if grep -q "output_type=\"pdf\"" app/services/ocr_service.py 2>/dev/null; then
    echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Ghostscript –Ω–∞–π–¥–µ–Ω—ã –≤ telegram-file-bot"
else
    echo "‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Ghostscript –ù–ï –Ω–∞–π–¥–µ–Ω—ã –≤ telegram-file-bot"
    echo "üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é..."
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    cp app/services/ocr_service.py app/services/ocr_service.py.backup
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    sed -i 's/pdf2image.convert_from_path(pdf_path)/pdf2image.convert_from_path(pdf_path, output_type="pdf")/g' app/services/ocr_service.py
    
    # –î–æ–±–∞–≤–ª—è–µ–º fallback –æ–±—Ä–∞–±–æ—Ç–∫—É
    cat >> app/services/ocr_service.py << 'EOL'

# Fallback –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö Ghostscript
def process_pdf_with_fallback(pdf_path: str) -> List[Image.Image]:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ PDF —Å fallback –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö Ghostscript"""
    try:
        return pdf2image.convert_from_path(pdf_path, output_type="pdf")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ Ghostscript: {e}")
        print("–ü—Ä–∏–º–µ–Ω—è–µ–º fallback —Å force_ocr=True...")
        return pdf2image.convert_from_path(pdf_path, force_ocr=True)
EOL
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º telegram-file-bot
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º telegram-file-bot..."
docker-compose down
docker-compose up -d

echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º present-bot..."
cd /srv/bots/present-bot

# –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
git fetch origin
git pull origin main

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ–¥–µ present-bot
if grep -q "output_type=\"pdf\"" app/services/pdf_factory.py 2>/dev/null; then
    echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Ghostscript –Ω–∞–π–¥–µ–Ω—ã –≤ present-bot"
else
    echo "‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Ghostscript –ù–ï –Ω–∞–π–¥–µ–Ω—ã –≤ present-bot"
    echo "üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é..."
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    cp app/services/pdf_factory.py app/services/pdf_factory.py.backup
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è present-bot
    sed -i 's/pdf2image.convert_from_path(pdf_path)/pdf2image.convert_from_path(pdf_path, output_type="pdf")/g' app/services/pdf_factory.py
    
    # –î–æ–±–∞–≤–ª—è–µ–º fallback –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–ª—è present-bot
    cat >> app/services/pdf_factory.py << 'EOL'

# Fallback –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö Ghostscript –¥–ª—è present-bot
def process_pdf_with_fallback_present(pdf_path: str) -> List[Image.Image]:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ PDF —Å fallback –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö Ghostscript –¥–ª—è present-bot"""
    try:
        return pdf2image.convert_from_path(pdf_path, output_type="pdf")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ Ghostscript –≤ present-bot: {e}")
        print("–ü—Ä–∏–º–µ–Ω—è–µ–º fallback —Å force_ocr=True...")
        return pdf2image.convert_from_path(pdf_path, force_ocr=True)
EOL
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º present-bot
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º present-bot..."
docker-compose down
docker-compose up -d

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±–æ–∏—Ö –±–æ—Ç–æ–≤
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–æ–≤..."
sleep 15

echo "üìä –°—Ç–∞—Ç—É—Å telegram-file-bot:"
docker logs telegram-file-bot_bot_1 --tail 5

echo "üìä –°—Ç–∞—Ç—É—Å present-bot:"
docker logs present-bot_bot_1 --tail 5

echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –¥–ª—è –æ–±–æ–∏—Ö –±–æ—Ç–æ–≤!"
EOF

echo "üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Ghostscript —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã –Ω–∞ –æ–±–∞ –±–æ—Ç–∞!"
echo "üì± –¢–µ–ø–µ—Ä—å PDF —Ñ–∞–π–ª—ã –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫ Ghostscript –≤ –æ–±–æ–∏—Ö –±–æ—Ç–∞—Ö" 