# app/keyboards/main_menu.py
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from app.i18n import t

# –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–µ–º
EMOJI = {
    "light": {
        "teacher_notes": "üìù",
        "teacher_add": "‚ûï",
        "teacher_ticket": "üõ†",
        "teacher_media": "üìπ",
        "admin_broadcast": "üì¢",
        "admin_tickets": "üóÇ",
        "admin_media": "üé¨",
        "par_tasks": "üìã",
        "par_cert": "üìù",
        "stu_tasks": "üìã",
        "stu_help": "üÜò",
        "psy_inbox": "üìã",
        "theme": "üåó",
        "back": "‚óÄÔ∏è",
        "stub": "üìä",
    },
    "dark": {
        "teacher_notes": "üìú",
        "teacher_add": "‚ûï",
        "teacher_ticket": "üîß",
        "teacher_media": "üé•",
        "admin_broadcast": "üì¢",
        "admin_tickets": "üìÅ",
        "admin_media": "üé¨",
        "par_tasks": "üìã",
        "par_cert": "üìÑ",
        "stu_tasks": "üìã",
        "stu_help": "üÜò",
        "psy_inbox": "üìã",
        "theme": "‚òÄÔ∏è",
        "back": "‚óÄÔ∏è",
        "stub": "üìä",
    },
}

# –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_back_btn(nonce: str = "") -> InlineKeyboardButton:
    return InlineKeyboardButton(text="‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data=f"{nonce}:back_to_main")

def menu(role: str, lang: str = "ru", theme: str = "light", nonce: str = "") -> InlineKeyboardMarkup:
    e = EMOJI[theme]  # –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
    
    if role == "super":      # –î–µ–º–æ-—É—á—ë—Ç–∫–∞ ‚Üí –º–µ–Ω—é –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–æ–ª–µ–π
        kb = [
            [InlineKeyboardButton(text="üë©‚Äçüè´ –£—á–∏—Ç–µ–ª—å", callback_data=f"{nonce}:switch_teacher"),
             InlineKeyboardButton(text="üèõ –ê–¥–º–∏–Ω", callback_data=f"{nonce}:switch_admin")],
            [InlineKeyboardButton(text="üìà –î–∏—Ä–µ–∫—Ç–æ—Ä", callback_data=f"{nonce}:switch_director"),
             InlineKeyboardButton(text="üë™ –†–æ–¥–∏—Ç–µ–ª—å", callback_data=f"{nonce}:switch_parent")],
            [InlineKeyboardButton(text="üë®‚Äçüéì –£—á–µ–Ω–∏–∫", callback_data=f"{nonce}:switch_student"),
             InlineKeyboardButton(text="üßë‚Äç‚öïÔ∏è –ü—Å–∏—Ö–æ–ª–æ–≥", callback_data=f"{nonce}:switch_psych")],
        ]
        return InlineKeyboardMarkup(inline_keyboard=kb)

    # ¬´–æ–±—ã—á–Ω—ã–µ¬ª –º–µ–Ω—é-–∑–∞–≥–ª—É—à–∫–∏
    if role == "teacher":
        kb = [
            [InlineKeyboardButton(text=f"{e['teacher_notes']} {t('teacher.menu_notes', lang)}", callback_data=f"{nonce}:teacher_notes")],
            [InlineKeyboardButton(text=f"{e['teacher_add']} {t('teacher.menu_add', lang)}", callback_data=f"{nonce}:teacher_add")],
            [InlineKeyboardButton(text=f"{e['teacher_ticket']} {t('teacher.ticket_prompt', lang)}", callback_data=f"{nonce}:teacher_ticket")],
            [InlineKeyboardButton(text=f"{e['teacher_media']} –ó–∞—è–≤–∫–∞ –≤ –º–µ–¥–∏–∞—Ü–µ–Ω—Ç—Ä", callback_data=f"{nonce}:teacher_media")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=kb)
    
    if role == "admin":
        kb = [
            [InlineKeyboardButton(text=f"{e['admin_broadcast']} –†–∞—Å—Å—ã–ª–∫–∞", callback_data=f"{nonce}:admin_broadcast")],
            [InlineKeyboardButton(text=f"{e['admin_tickets']} –ó–∞—è–≤–∫–∏ IT", callback_data=f"{nonce}:admin_tickets")],
            [InlineKeyboardButton(text=f"{e['admin_media']} –ú–µ–¥–∏–∞—Ü–µ–Ω—Ç—Ä", callback_data=f"{nonce}:admin_media")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=kb)
    
    if role == "parent":
        kb = [
            [InlineKeyboardButton(text=f"{e['par_tasks']} –ó–∞–¥–∞–Ω–∏—è —Ä–µ–±—ë–Ω–∫–∞", callback_data=f"{nonce}:par_tasks")],
            [InlineKeyboardButton(text=f"{e['par_cert']} –ó–∞–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É", callback_data=f"{nonce}:par_cert")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=kb)
    
    if role == "director":
        kb = [
            [InlineKeyboardButton(text=f"{e['stub']} KPI", callback_data=f"{nonce}:stub")],
            [InlineKeyboardButton(text="‚è± –ü–æ—Ä—É—á–µ–Ω–∏—è", callback_data=f"{nonce}:director_tasks")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=kb)
    
    if role == "student":
        kb = [
            [InlineKeyboardButton(text=f"{e['stu_tasks']} –ó–∞–¥–∞–Ω–∏—è", callback_data=f"{nonce}:stu_tasks")],
            [InlineKeyboardButton(text=f"{e['stu_help']} –ü—Å–∏—Ö–æ–ª–æ–≥", callback_data=f"{nonce}:stu_help")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=kb)
    
    if role == "psych":
        kb = [
            [InlineKeyboardButton(text=f"{e['psy_inbox']} {t('psych.menu_requests', lang)}", callback_data=f"{nonce}:psy_inbox")]
        ]
        return InlineKeyboardMarkup(inline_keyboard=kb)
    
    mapping = {}
    kb = [[InlineKeyboardButton(text=text, callback_data=f"{nonce}:stub")]
          for text in sum(mapping.get(role, []), [])]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã –≤–æ –≤—Å–µ –º–µ–Ω—é
    kb.append([InlineKeyboardButton(text=f"{e['theme']} –¢–µ–º–∞", callback_data="switch_theme")])
    
    return InlineKeyboardMarkup(inline_keyboard=kb) 