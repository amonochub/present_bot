"""
–°–µ—Ä–≤–∏—Å –¥–ª—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import asyncio

from aiogram import Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import (
    CallbackQuery,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    Message,
)

from app.i18n import t
from app.repositories.user_repo import create_user, get_user, update_user_intro
from app.roles import UserRole
from app.services.command_service import command_service


class OnboardingService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""

    def __init__(self, bot: Bot):
        self.bot = bot

    async def start_onboarding(
        self, message: Message, state: FSMContext
    ) -> None:
        """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç"
        await self.bot.send_chat_action(message.chat.id, "typing")

        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ UX
        await asyncio.sleep(0.5)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        user = await get_user(message.from_user.id)

        if not user:
            # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = await create_user(
                telegram_id=message.from_user.id,
                username=message.from_user.username,
                first_name=message.from_user.first_name,
                last_name=message.from_user.last_name,
                role=UserRole.STUDENT,  # –†–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            )

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        welcome_text = t("onboarding.welcome", "ru")
        keyboard = self._get_role_selection_keyboard()

        await message.answer(
            welcome_text, reply_markup=keyboard, parse_mode="HTML"
        )

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
        await state.set_state("onboarding:role_selection")

    async def handle_role_selection(
        self, callback: CallbackQuery, state: FSMContext
    ) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç"
        await self.bot.send_chat_action(callback.message.chat.id, "typing")

        role_data = callback.data.split(":")[1]
        role = UserRole(role_data)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await get_user(callback.from_user.id)
        if user:
            user.role = role
            await user.save()

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–æ–≤–æ–π —Ä–æ–ª–∏
            if command_service:
                await command_service.setup_role_commands(
                    callback.from_user.id, role, "ru"
                )

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
        confirmation_text = t("onboarding.role_confirmation", "ru")
        role_name = t(f"roles.{role.value}", "ru")

        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
                        callback_data="onboarding:confirm_role",
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üîÑ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é",
                        callback_data="onboarding:change_role",
                    )
                ],
            ]
        )

        await callback.message.edit_text(
            f"{confirmation_text}\n\nüéØ –í—ã–±—Ä–∞–Ω–Ω–∞—è —Ä–æ–ª—å: <b>{role_name}</b>",
            reply_markup=keyboard,
            parse_mode="HTML",
        )

        await callback.answer()

    async def confirm_role(
        self, callback: CallbackQuery, state: FSMContext
    ) -> None:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –≤—ã–±–æ—Ä —Ä–æ–ª–∏ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –æ–Ω–±–æ—Ä–¥–∏–Ω–≥"""

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç"
        await self.bot.send_chat_action(callback.message.chat.id, "typing")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
        await update_user_intro(callback.from_user.id, True)

        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        user = await get_user(callback.from_user.id)
        role_name = t(f"roles.{user.role.value}", "ru")

        final_text = f"""
üéâ –û—Ç–ª–∏—á–Ω–æ! –û–Ω–±–æ—Ä–¥–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω.

‚úÖ –í–∞—à–∞ —Ä–æ–ª—å: <b>{role_name}</b>
üì± –¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã –≤ –º–µ–Ω—é –±–æ—Ç–∞
‚ùì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
üè† /menu - –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SchoolBot! üéì
        """.strip()

        from app.keyboards.main_menu import menu

        keyboard = menu(user.role, "ru")

        await callback.message.edit_text(
            final_text, reply_markup=keyboard, parse_mode="HTML"
        )

        await callback.answer()

    async def change_role(
        self, callback: CallbackQuery, state: FSMContext
    ) -> None:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –≤—ã–±–æ—Ä—É —Ä–æ–ª–∏"""

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç"
        await self.bot.send_chat_action(callback.message.chat.id, "typing")

        welcome_text = t("onboarding.welcome", "ru")
        keyboard = self._get_role_selection_keyboard()

        await callback.message.edit_text(
            welcome_text, reply_markup=keyboard, parse_mode="HTML"
        )

        await callback.answer()

    def _get_role_selection_keyboard(self) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""

        roles = [
            ("üë®‚Äçüéì –£—á–µ–Ω–∏–∫", "onboarding:role:student"),
            ("üë©‚Äçüè´ –£—á–∏—Ç–µ–ª—å", "onboarding:role:teacher"),
            ("üë™ –†–æ–¥–∏—Ç–µ–ª—å", "onboarding:role:parent"),
            ("üßë‚Äç‚öïÔ∏è –ü—Å–∏—Ö–æ–ª–æ–≥", "onboarding:role:psychologist"),
            ("üèõ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "onboarding:role:admin"),
            ("üìà –î–∏—Ä–µ–∫—Ç–æ—Ä", "onboarding:role:director"),
        ]

        keyboard = []
        for role_name, callback_data in roles:
            keyboard.append(
                [
                    InlineKeyboardButton(
                        text=role_name, callback_data=callback_data
                    )
                ]
            )

        return InlineKeyboardMarkup(inline_keyboard=keyboard)


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
onboarding_service: OnboardingService = None


def init_onboarding_service(bot: Bot) -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞"""
    global onboarding_service
    onboarding_service = OnboardingService(bot)
